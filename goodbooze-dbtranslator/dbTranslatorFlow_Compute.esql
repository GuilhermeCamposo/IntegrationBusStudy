CREATE COMPUTE MODULE dbTranslatorFlow_Compute

	DECLARE types NAMESPACE 'http://goodbooze.com/orderManager/types';
	DECLARE entry NAMESPACE 'http://goodbooze.com/ordermanager/dbtranslator/saveentry';

	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		DECLARE INPUT_INSERT_DATE CHARACTER ;
		DECLARE entry_id INTEGER;

		SET INPUT_INSERT_DATE = InputBody.entry:SaveEntryRequest.entry:Entry.types:insertDate;

		CALL insert_entry( INPUT_INSERT_DATE , CURRENT_TIMESTAMP , entry_id) IN Database.public ;
		
	    DECLARE ge_store_order_id INTEGER;

		FOR store_order AS InputBody.entry:SaveEntryRequest.entry:Entry.types:storeOrderList.types:storeOrder[] DO
			CALL insert_store_order( store_order.types:insertDate , 'PROCESSED', CURRENT_TIMESTAMP , store_order.types:store.types:id , 
			                         entry_id , ge_store_order_id) IN Database.public ;
			FOR order_item AS store_order.types:itemStoreOrderList.types:itemStore[] DO
				INSERT INTO Database.item_store_order(quantity, product_internal_id, store_order_id)
				VALUES (order_item.types:quantity ,order_item.types:product.types:internalId,ge_store_order_id);
			END FOR;
		END FOR;

		RETURN TRUE;
	END;




	CREATE PROCEDURE insert_entry(IN input_insert_date CHARACTER, IN input_process_date TIMESTAMP, OUT id_generated INTEGER) LANGUAGE DATABASE EXTERNAL NAME "insert_entry";

	CREATE PROCEDURE insert_store_order(IN in_insert_date CHARACTER, IN in_status CHARACTER,
	IN in_update_date TIMESTAMP , IN in_store_id CHARACTER,
	IN in_entry_id INTEGER, OUT id_generated INTEGER) LANGUAGE DATABASE EXTERNAL NAME "insert_store_order";


	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;


END MODULE;